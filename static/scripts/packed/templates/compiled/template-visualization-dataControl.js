(function(){var b=Handlebars.template,a=Handlebars.templates=Handlebars.templates||{};a["template-visualization-dataControl"]=b(function(g,t,r,l,u){r=r||g.helpers;var s="",i,f,h,p,o=this,e="function",q=r.helperMissing,c=void 0,d=this.escapeExpression;function n(y,x){var v="",w;v+='\n            <option value="';h=r.index;w=h||y.index;if(typeof w===e){w=w.call(y,{hash:{}})}else{if(w===c){w=q.call(y,"index",{hash:{}})}}v+=d(w)+'">';h=r.name;w=h||y.name;if(typeof w===e){w=w.call(y,{hash:{}})}else{if(w===c){w=q.call(y,"name",{hash:{}})}}v+=d(w)+"</option>\n        ";return v}function m(y,x){var v="",w;v+='\n            <option value="';h=r.index;w=h||y.index;if(typeof w===e){w=w.call(y,{hash:{}})}else{if(w===c){w=q.call(y,"index",{hash:{}})}}v+=d(w)+'">';h=r.name;w=h||y.name;if(typeof w===e){w=w.call(y,{hash:{}})}else{if(w===c){w=q.call(y,"name",{hash:{}})}}v+=d(w)+"</option>\n        ";return v}function k(y,x){var v="",w;v+='\n            <option value="';h=r.index;w=h||y.index;if(typeof w===e){w=w.call(y,{hash:{}})}else{if(w===c){w=q.call(y,"index",{hash:{}})}}v+=d(w)+'">';h=r.name;w=h||y.name;if(typeof w===e){w=w.call(y,{hash:{}})}else{if(w===c){w=q.call(y,"name",{hash:{}})}}v+=d(w)+"</option>\n        ";return v}function j(w,v){return'checked="true"'}s+="<p class=\"help-text\">\n        Use the following controls to change the data used by the chart.\n        Use the 'Draw' button to render (or re-render) the chart with the current settings.\n    </p>\n\n    ";s+='\n    <div class="column-select">\n        <label for="X-select">Data column for X: </label>\n        <select name="X" id="X-select">\n        ';h=r.numericColumns;i=h||t.numericColumns;f=r.each;p=o.program(1,n,u);p.hash={};p.fn=p;p.inverse=o.noop;i=f.call(t,i,p);if(i||i===0){s+=i}s+='\n        </select>\n    </div>\n    <div class="column-select">\n        <label for="Y-select">Data column for Y: </label>\n        <select name="Y" id="Y-select">\n        ';h=r.numericColumns;i=h||t.numericColumns;f=r.each;p=o.program(3,m,u);p.hash={};p.fn=p;p.inverse=o.noop;i=f.call(t,i,p);if(i||i===0){s+=i}s+="\n        </select>\n    </div>\n\n    ";s+='\n    <div id="include-id">\n        <label for="include-id-checkbox">Include a third column as data point IDs?</label>\n        <input type="checkbox" name="include-id" id="include-id-checkbox" />\n        <p class="help-text-small">\n            These will be displayed (along with the x and y values) when you hover over\n            a data point.\n        </p>\n    </div>\n    <div class="column-select" style="display: none">\n        <label for="ID-select">Data column for IDs: </label>\n        <select name="ID" id="ID-select">\n        ';h=r.allColumns;i=h||t.allColumns;f=r.each;p=o.program(5,k,u);p.hash={};p.fn=p;p.inverse=o.noop;i=f.call(t,i,p);if(i||i===0){s+=i}s+="\n        </select>\n    </div>\n\n    ";s+='\n    <div id="first-line-header" style="display: none;">\n        <p>Possible headers: ';h=r.possibleHeaders;i=h||t.possibleHeaders;if(typeof i===e){i=i.call(t,{hash:{}})}else{if(i===c){i=q.call(t,"possibleHeaders",{hash:{}})}}s+=d(i)+'\n        </p>\n        <label for="first-line-header-checkbox">Use the above as column headers?</label>\n        <input type="checkbox" name="include-id" id="first-line-header-checkbox"\n            ';h=r.usePossibleHeaders;i=h||t.usePossibleHeaders;f=r["if"];p=o.program(7,j,u);p.hash={};p.fn=p;p.inverse=o.noop;i=f.call(t,i,p);if(i||i===0){s+=i}s+='/>\n        <p class="help-text-small">\n            It looks like Galaxy couldn\'t get proper column headers for this data.\n            Would you like to use the column headers above as column names to select columns?\n        </p>\n    </div>\n\n    <input id="render-button" type="button" value="Draw" />\n    <div class="clear"></div>';return s})})();